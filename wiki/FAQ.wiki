#summary Frequently Asked Questions
 
This page contains answers to frequent questions.
 
<wiki:toc max_depth="1" />
 
= Will there be an API like this for Starcraft II? =
 
  No. The BWAPI team is not interested in developing an API for [http://www.battle.net/sc2/ Starcraft II]. Some reasons are listed below.
    * [http://www.blizzard.com Blizzard Entertainment] has a strict [http://www.blizzard.com/support/article.xml?tag=SC2exploitation anti-hacking policy] for [http://www.battle.net/sc2/ Starcraft II].
    * Creating hacks and freely moving about the binary is far more difficult than doing so with [http://www.blizzard.com/games/sc/ Starcraft: Broodwar].
    * It will be difficult to maintain because of frequent updates.
    * The [http://www.battle.net/sc2/ Starcraft II] engine is not ideal for AI development. We can increase the logical frame rate of Broodwar easily, so that genetic algorithms can learn by playing thousands of games in a single day.
    * AI/API developers will need to handle far more information than with BWAPI.
    * Embarking on such a project will require an exponentially greater amount of time to develop.
    * The [http://www.blizzard.com/support/article.xml?tag=SC2MINSPEC system requirements] are in another universe compared to those of [http://www.blizzard.com/support/article.xml?articleId=25801 Starcraft: Broodwar].

= When are units deleted? When do Unit pointers become invalid? =
 
  Units are deleted only after the match ends.
 
= Should I Make an AI DLL Module or an AI Client Program? =
  It is completely up to you. Each type has advantages and disadvantages. If you are a beginner, the DLL module is recommended.
  == DLL Module ==
    * Low overhead
    * Most functional
    * Must compile with Visual C++
  == Client Program ==
    * Can use any compiler
    * Prevents potential cheating (unable to read memory from another process)

= Why use Visual Studio? =
  The BWAPI uses Visual C++ for its friendly interface and powerful debugger. Users that are new to BWAPI or C++ can simply download the Integrated Developer Environment (IDE), install BWAPI, open the project, and click "compile". It is very easy to use and the only drawback is that it is not up-to-date with the new C++ language standard.

= Can I use another compiler? =
  You can only use another compiler for a Client AI. Compiling AI DLL Modules to be loaded by BWAPI directly, or even BWAPI itself can only result in incompatibilities with modules compiled in Visual C++. This is because in the C++ standard, virtual functions are *implementation defined*.

= Is the API thread-safe? =
  No. The API is not thread safe. In practice, even functions that return a single mutable integer are considered *not* thread-safe. Adding thread-safety to the API will only add unnecessary overhead. If you want your bot to use the API in a multi-threaded environment, you will have to put locks on copies of the data retrieved during the onFrame callback.


= What is a Force? =
  A [Force] is another name for Team. In fact, the term "Team" is never used by Starcraft's Campaign Editor "StarEdit". Default team names are also called "Force #", and thus we use the most common reference.

  http://bwapi.googlecode.com/svn/wiki/forces.gif

= Where is Heal Move? =

You can HealMove by using either of the following calls;
<code>
pUnit->attack(position);
pUnit->useTech(TechTypes::Healing, position);</code>